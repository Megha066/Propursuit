# import pickle
# import pandas as pd
# from sklearn.model_selection import train_test_split
# from sklearn.preprocessing import LabelEncoder
# from sklearn.ensemble import RandomForestClassifier
# data=pd.read_csv("Dataset_class_10.csv")


# ip_col=["IQ","BENGALI","ENGLISH","MATHEMATICS","BIOLOGY","PHYSICAL SCIENCE","HISTORY","GEOGRAPHY"]
# X=data[ip_col]
# y=data["STREAM"]

# X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


# rf_model= RandomForestClassifier()
# rf_model.fit(X_train, y_train)
# pickle.dump(rf_model,open("model_10.pkl","wb"))

# -*- coding: utf-8 -*-
"""Class_10_MODEL

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16Vm9Cm5LHV4ppwOl7BbpxtJDN2xN016d
"""

import pandas as pd
import random
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
import numpy as np

data=pd.read_csv("Class_10_Data.csv")
# print(data.columns.tolist())

# Drop columns with a high percentage of null values
data = data.dropna(axis=1, thresh=len(data)*0.5)

# Drop any remaining rows with null values
data = data.dropna()

ip_col=["IQ", "Bengali", "English", "Math", "Biology", "Physical_Science", "History", "Geography"]
X=data[ip_col]
y=data["Stream"]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30)

rf_model=KNeighborsClassifier(n_neighbors=3)
rf_model.fit(X_train, y_train)

y_pred = rf_model.predict(X_test)

# model.py 